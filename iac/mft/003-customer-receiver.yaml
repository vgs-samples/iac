AWSTemplateFormatVersion: "2010-09-09"
Description: |
  Allows VGS to replicate from the VGS account to a customer via S3 replication.

  This file is run in the customer's AWS account that should receive the files.

Parameters:

  CustomerVgsVaultId:
    Type: String
    Description: Customer's VGS Vault Id

  VgsAwsAccountId:
    Type: String
    Description: AWS Account for VGS.
    Default: '526682027428'

  Version:
    Type: String
    Description: Discriminator in case multiple instances are provisioned
    Default: '01'

Resources:

  InternalSourceS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'customer-files-from-vgs-for-${CustomerVgsVaultId}-${Version}'
      VersioningConfiguration:
        Status: Enabled
      Tags:
      - Key: vgs.io/vaultId
        Value: !Ref CustomerVgsVaultId

  CustomerReplicationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: !Join ['',['arn:aws:iam::', !Ref VgsAwsAccountId, ':root']]
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: copy-to-customer
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload
              - s3:DeleteObject
              - s3:Get*
              - s3:List*
              - s3:Put*
            Resource: ## destination bucket
              - !Sub 'arn:aws:s3:::customer-files-from-vgs-for-${CustomerVgsVaultId}-${Version}'
              - !Sub 'arn:aws:s3:::customer-files-from-vgs-for-${CustomerVgsVaultId}-${Version}/*'
      Tags:
      - Key: vgs.io/vaultId
        Value: !Ref CustomerVgsVaultId
      - Key: vgs.io/service
        Value: mft

  BucketReplicationPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Sub 'customer-files-from-vgs-for-${CustomerVgsVaultId}-${Version}'
      PolicyDocument:
        Statement:
        - Sid: ReplicationPolicy
          Effect: Allow
          Principal:
            AWS: !Join ['',['arn:aws:iam::', !Ref VgsAwsAccountId, ':root']]
          Action:
            - 's3:ReplicateObject'
            - 's3:ReplicateDelete'
            - 's3:ReplicateTags'
            - 's3:GetObjectVersionTagging'
            - 's3:GetBucketVersioning'
            - 's3:PutBucketVersioning'
            - 's3:ObjectOwnerOverrideToBucketOwner'
          Resource: ## destination bucket
            - !Sub 'arn:aws:s3:::customer-files-from-vgs-for-${CustomerVgsVaultId}-${Version}'
            - !Sub 'arn:aws:s3:::customer-files-from-vgs-for-${CustomerVgsVaultId}-${Version}/*'
        - Sid: DenyUnEncryptedObjectUploads
          Effect: Deny
          Principal: "*"
          Action:
            - s3:PutObject
            - s3:ReplicateObject
          Resource: ## destination bucket
            - !Sub 'arn:aws:s3:::customer-files-from-vgs-for-${CustomerVgsVaultId}-${Version}/*'
          Condition:
            "Null":
              s3:x-amz-server-side-encryption: true

Outputs:
  CustomerVgsVaultId:
    Value: !Ref CustomerVgsVaultId
  VgsAwsAccountId:
    Value: !Ref VgsAwsAccountId
  CustomerAwsRegion:
    Value: !Ref AWS::Region
  CustomerS3Bucket:
    Value: !Ref InternalSourceS3Bucket
    Description: VGS S3 bucket that will receive replicated files
  CustomerReplicationRole:
    Value: !GetAtt CustomerReplicationRole.Arn
    Description: Customer's IAM role
